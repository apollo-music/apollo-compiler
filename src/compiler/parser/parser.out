Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CUE
    MULTIPLY
    SYNC

Grammar

Rule 0     S' -> program2
Rule 1     program2 -> START NEWLINE program END
Rule 2     program -> statement NEWLINE
Rule 3     program -> statement NEWLINE program
Rule 4     statement -> command
Rule 5     statement -> param
Rule 6     statement -> assignation
Rule 7     statement -> loop
<<<<<<< HEAD
Rule 8     statement -> sequence
Rule 9     statement -> track
Rule 10    param -> AMP EQUAL INT
Rule 11    param -> AMP EQUAL ID
Rule 12    param -> DUR EQUAL INT
Rule 13    param -> DUR EQUAL ID
Rule 14    param -> INSTR EQUAL INT
Rule 15    param -> TONE EQUAL INT
Rule 16    param -> TONE EQUAL ID
Rule 17    param -> SLEEP EQUAL INT
Rule 18    param -> SLEEP EQUAL ID
Rule 19    param -> CALL TWOPOINTS ID
Rule 20    command -> command COMMA param
Rule 21    command -> PLAY TWOPOINTS playcontent
Rule 22    playcontent -> LBRACKET seqexp RBRACKET
Rule 23    playcontent -> ID
Rule 24    playcontent -> acc
Rule 25    assignation -> VAR ID EQUAL exp
Rule 26    exp -> LBRACKET seqsound RBRACKET rec_op
Rule 27    exp -> nota rec_op
Rule 28    exp -> acc rec_op
Rule 29    seqexp -> exp COMMA seqexp
Rule 30    seqexp -> exp
Rule 31    rec_op -> <empty>
Rule 32    rec_op -> SUM exp
Rule 33    rec_op -> MINUS exp
Rule 34    rec_op -> AMPERSAND exp
Rule 35    seqsound -> sound COMMA seqsound
Rule 36    seqsound -> sound
Rule 37    sound -> acc
Rule 38    sound -> nota
Rule 39    acc -> LPAREN seqnotas RPAREN
Rule 40    seqnotas -> nota
Rule 41    seqnotas -> nota COMMA seqnotas
Rule 42    nota -> INT
Rule 43    nota -> ID
Rule 44    loop -> REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
Rule 45    sequence -> SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE
Rule 46    track -> TRACK ID TWOPOINTS NEWLINE program ENDTRACK

Terminals, with rules where they appear

AMP                  : 10 11
AMPERSAND            : 34
CALL                 : 19
COMMA                : 20 29 35 41
CUE                  : 
DUR                  : 12 13
END                  : 1
ENDREPEAT            : 44
ENDSEQUENCE          : 45
ENDTRACK             : 46
EQUAL                : 10 11 12 13 14 15 16 17 18 25
ID                   : 11 13 16 18 19 23 25 43 45 46
INSTR                : 14
INT                  : 10 12 14 15 17 42 44
LBRACKET             : 22 26
LPAREN               : 39
MINUS                : 33
MULTIPLY             : 
NEWLINE              : 1 2 3 44 45 46
PLAY                 : 21
RBRACKET             : 22 26
REPEAT               : 44
RPAREN               : 39
SEQUENCE             : 45
SLEEP                : 17 18
START                : 1
SUM                  : 32
SYNC                 : 
TONE                 : 15 16
TRACK                : 46
TWOPOINTS            : 19 21 44 45 46
VAR                  : 25
=======
Rule 8     statement -> label
Rule 9     param -> AMP EQUAL exp2
Rule 10    param -> DUR EQUAL exp2
Rule 11    param -> INSTR EQUAL exp2
Rule 12    param -> TONE EQUAL exp2
Rule 13    param -> SLEEP EQUAL exp2
Rule 14    param -> CALL TWOPOINTS ID
Rule 15    command -> command COMMA param
Rule 16    command -> PLAY TWOPOINTS playcontent
Rule 17    playcontent -> LBRACKET seqexp RBRACKET
Rule 18    playcontent -> ID
Rule 19    playcontent -> acc
Rule 20    assignation -> VAR ID EQUAL exp
Rule 21    exp -> LBRACKET seqsound RBRACKET rec_op
Rule 22    exp -> nota rec_op
Rule 23    exp -> acc rec_op
Rule 24    seqexp -> exp COMMA seqexp
Rule 25    seqexp -> exp
Rule 26    rec_op -> <empty>
Rule 27    rec_op -> SUM exp
Rule 28    rec_op -> MINUS exp
Rule 29    rec_op -> AMPERSAND exp
Rule 30    exp2 -> nota rec_op2
Rule 31    rec_op2 -> <empty>
Rule 32    rec_op2 -> SUM exp2
Rule 33    rec_op2 -> MINUS exp2
Rule 34    seqsound -> sound COMMA seqsound
Rule 35    seqsound -> sound
Rule 36    sound -> acc
Rule 37    sound -> nota
Rule 38    acc -> LPAREN seqnotas RPAREN
Rule 39    seqnotas -> nota
Rule 40    seqnotas -> nota COMMA seqnotas
Rule 41    nota -> INT
Rule 42    nota -> ID
Rule 43    loop -> REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
Rule 44    label -> SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE

Terminals, with rules where they appear

AMP                  : 9
AMPERSAND            : 29
CALL                 : 14
COMMA                : 15 24 34 40
CUE                  : 
DUR                  : 10
END                  : 1
ENDREPEAT            : 43
ENDSEQUENCE          : 44
ENDTRACK             : 
EQUAL                : 9 10 11 12 13 20
ID                   : 14 18 20 42 44
INSTR                : 11
INT                  : 41 43
LBRACKET             : 17 21
LPAREN               : 38
MINUS                : 28 33
MULTIPLY             : 
NEWLINE              : 1 2 3 43 44
PLAY                 : 16
RBRACKET             : 17 21
REPEAT               : 43
RPAREN               : 38
SEQUENCE             : 44
SLEEP                : 13
START                : 1
SUM                  : 27 32
SYNC                 : 
TONE                 : 12
TRACK                : 
TWOPOINTS            : 14 16 43 44
VAR                  : 20
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b
error                : 

Nonterminals, with rules where they appear

<<<<<<< HEAD
acc                  : 24 28 37
assignation          : 6
command              : 4 20
exp                  : 25 29 30 32 33 34
loop                 : 7
nota                 : 27 38 40 41
param                : 5 20
playcontent          : 21
program              : 1 3 44 45 46
program2             : 0
rec_op               : 26 27 28
seqexp               : 22 29
seqnotas             : 39 41
seqsound             : 26 35
sequence             : 8
sound                : 35 36
=======
acc                  : 19 23 36
assignation          : 6
command              : 4 15
exp                  : 20 24 25 27 28 29
exp2                 : 9 10 11 12 13 32 33
label                : 8
loop                 : 7
nota                 : 22 30 37 39 40
param                : 5 15
playcontent          : 16
program              : 1 3 43 44
program2             : 0
rec_op               : 21 22 23
rec_op2              : 30
seqexp               : 17 24
seqnotas             : 38 40
seqsound             : 21 34
sound                : 34 35
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b
statement            : 2 3
track                : 9

Parsing method: LALR

state 0

    (0) S' -> . program2
    (1) program2 -> . START NEWLINE program END

    START           shift and go to state 2

    program2                       shift and go to state 1

state 1

    (0) S' -> program2 .



state 2

    (1) program2 -> START . NEWLINE program END

    NEWLINE         shift and go to state 3


state 3

    (1) program2 -> START NEWLINE . program END
    (2) program -> . statement NEWLINE
    (3) program -> . statement NEWLINE program
    (4) statement -> . command
    (5) statement -> . param
    (6) statement -> . assignation
    (7) statement -> . loop
<<<<<<< HEAD
    (8) statement -> . sequence
    (9) statement -> . track
    (20) command -> . command COMMA param
    (21) command -> . PLAY TWOPOINTS playcontent
    (10) param -> . AMP EQUAL INT
    (11) param -> . AMP EQUAL ID
    (12) param -> . DUR EQUAL INT
    (13) param -> . DUR EQUAL ID
    (14) param -> . INSTR EQUAL INT
    (15) param -> . TONE EQUAL INT
    (16) param -> . TONE EQUAL ID
    (17) param -> . SLEEP EQUAL INT
    (18) param -> . SLEEP EQUAL ID
    (19) param -> . CALL TWOPOINTS ID
    (25) assignation -> . VAR ID EQUAL exp
    (44) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (45) sequence -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE
    (46) track -> . TRACK ID TWOPOINTS NEWLINE program ENDTRACK

    PLAY            shift and go to state 12
    AMP             shift and go to state 13
    DUR             shift and go to state 14
    INSTR           shift and go to state 15
    TONE            shift and go to state 16
    SLEEP           shift and go to state 17
    CALL            shift and go to state 18
    VAR             shift and go to state 19
    REPEAT          shift and go to state 20
    SEQUENCE        shift and go to state 21
    TRACK           shift and go to state 22
=======
    (8) statement -> . label
    (15) command -> . command COMMA param
    (16) command -> . PLAY TWOPOINTS playcontent
    (9) param -> . AMP EQUAL exp2
    (10) param -> . DUR EQUAL exp2
    (11) param -> . INSTR EQUAL exp2
    (12) param -> . TONE EQUAL exp2
    (13) param -> . SLEEP EQUAL exp2
    (14) param -> . CALL TWOPOINTS ID
    (20) assignation -> . VAR ID EQUAL exp
    (43) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (44) label -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE

    PLAY            shift and go to state 11
    AMP             shift and go to state 12
    DUR             shift and go to state 13
    INSTR           shift and go to state 14
    TONE            shift and go to state 15
    SLEEP           shift and go to state 16
    CALL            shift and go to state 17
    VAR             shift and go to state 18
    REPEAT          shift and go to state 19
    SEQUENCE        shift and go to state 20
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    program                        shift and go to state 4
    statement                      shift and go to state 5
    command                        shift and go to state 6
    param                          shift and go to state 7
    assignation                    shift and go to state 8
    loop                           shift and go to state 9
    sequence                       shift and go to state 10
    track                          shift and go to state 11

state 4

    (1) program2 -> START NEWLINE program . END

    END             shift and go to state 23


state 5

    (2) program -> statement . NEWLINE
    (3) program -> statement . NEWLINE program

    NEWLINE         shift and go to state 24


state 6

    (4) statement -> command .
<<<<<<< HEAD
    (20) command -> command . COMMA param
=======
    (15) command -> command . COMMA param
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    NEWLINE         reduce using rule 4 (statement -> command .)
    COMMA           shift and go to state 25


state 7

    (5) statement -> param .

    NEWLINE         reduce using rule 5 (statement -> param .)


state 8

    (6) statement -> assignation .

    NEWLINE         reduce using rule 6 (statement -> assignation .)


state 9

    (7) statement -> loop .

    NEWLINE         reduce using rule 7 (statement -> loop .)


state 10

    (8) statement -> sequence .

    NEWLINE         reduce using rule 8 (statement -> sequence .)


state 11

<<<<<<< HEAD
    (9) statement -> track .
=======
    (16) command -> PLAY . TWOPOINTS playcontent
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    NEWLINE         reduce using rule 9 (statement -> track .)


state 12

<<<<<<< HEAD
    (21) command -> PLAY . TWOPOINTS playcontent
=======
    (9) param -> AMP . EQUAL exp2
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    TWOPOINTS       shift and go to state 26


state 13

<<<<<<< HEAD
    (10) param -> AMP . EQUAL INT
    (11) param -> AMP . EQUAL ID
=======
    (10) param -> DUR . EQUAL exp2
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    EQUAL           shift and go to state 27


state 14

<<<<<<< HEAD
    (12) param -> DUR . EQUAL INT
    (13) param -> DUR . EQUAL ID
=======
    (11) param -> INSTR . EQUAL exp2
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    EQUAL           shift and go to state 28


state 15

<<<<<<< HEAD
    (14) param -> INSTR . EQUAL INT
=======
    (12) param -> TONE . EQUAL exp2
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    EQUAL           shift and go to state 29


state 16

<<<<<<< HEAD
    (15) param -> TONE . EQUAL INT
    (16) param -> TONE . EQUAL ID
=======
    (13) param -> SLEEP . EQUAL exp2
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    EQUAL           shift and go to state 30


state 17

<<<<<<< HEAD
    (17) param -> SLEEP . EQUAL INT
    (18) param -> SLEEP . EQUAL ID
=======
    (14) param -> CALL . TWOPOINTS ID
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    EQUAL           shift and go to state 31


state 18

<<<<<<< HEAD
    (19) param -> CALL . TWOPOINTS ID
=======
    (20) assignation -> VAR . ID EQUAL exp
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    TWOPOINTS       shift and go to state 32


state 19

    (25) assignation -> VAR . ID EQUAL exp

    ID              shift and go to state 33


state 20

    (44) loop -> REPEAT . INT TWOPOINTS NEWLINE program ENDREPEAT

    INT             shift and go to state 34


state 21

    (45) sequence -> SEQUENCE . ID TWOPOINTS NEWLINE program ENDSEQUENCE

    ID              shift and go to state 35


state 22

    (46) track -> TRACK . ID TWOPOINTS NEWLINE program ENDTRACK

    ID              shift and go to state 36


state 23

    (1) program2 -> START NEWLINE program END .

    $end            reduce using rule 1 (program2 -> START NEWLINE program END .)


state 24

    (2) program -> statement NEWLINE .
    (3) program -> statement NEWLINE . program
    (2) program -> . statement NEWLINE
    (3) program -> . statement NEWLINE program
    (4) statement -> . command
    (5) statement -> . param
    (6) statement -> . assignation
    (7) statement -> . loop
<<<<<<< HEAD
    (8) statement -> . sequence
    (9) statement -> . track
    (20) command -> . command COMMA param
    (21) command -> . PLAY TWOPOINTS playcontent
    (10) param -> . AMP EQUAL INT
    (11) param -> . AMP EQUAL ID
    (12) param -> . DUR EQUAL INT
    (13) param -> . DUR EQUAL ID
    (14) param -> . INSTR EQUAL INT
    (15) param -> . TONE EQUAL INT
    (16) param -> . TONE EQUAL ID
    (17) param -> . SLEEP EQUAL INT
    (18) param -> . SLEEP EQUAL ID
    (19) param -> . CALL TWOPOINTS ID
    (25) assignation -> . VAR ID EQUAL exp
    (44) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (45) sequence -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE
    (46) track -> . TRACK ID TWOPOINTS NEWLINE program ENDTRACK
=======
    (8) statement -> . label
    (15) command -> . command COMMA param
    (16) command -> . PLAY TWOPOINTS playcontent
    (9) param -> . AMP EQUAL exp2
    (10) param -> . DUR EQUAL exp2
    (11) param -> . INSTR EQUAL exp2
    (12) param -> . TONE EQUAL exp2
    (13) param -> . SLEEP EQUAL exp2
    (14) param -> . CALL TWOPOINTS ID
    (20) assignation -> . VAR ID EQUAL exp
    (43) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (44) label -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    END             reduce using rule 2 (program -> statement NEWLINE .)
    ENDREPEAT       reduce using rule 2 (program -> statement NEWLINE .)
    ENDSEQUENCE     reduce using rule 2 (program -> statement NEWLINE .)
    ENDTRACK        reduce using rule 2 (program -> statement NEWLINE .)
    PLAY            shift and go to state 12
    AMP             shift and go to state 13
    DUR             shift and go to state 14
    INSTR           shift and go to state 15
    TONE            shift and go to state 16
    SLEEP           shift and go to state 17
    CALL            shift and go to state 18
    VAR             shift and go to state 19
    REPEAT          shift and go to state 20
    SEQUENCE        shift and go to state 21
    TRACK           shift and go to state 22

    statement                      shift and go to state 5
    program                        shift and go to state 37
    command                        shift and go to state 6
    param                          shift and go to state 7
    assignation                    shift and go to state 8
    loop                           shift and go to state 9
<<<<<<< HEAD
    sequence                       shift and go to state 10
    track                          shift and go to state 11

state 25

    (20) command -> command COMMA . param
    (10) param -> . AMP EQUAL INT
    (11) param -> . AMP EQUAL ID
    (12) param -> . DUR EQUAL INT
    (13) param -> . DUR EQUAL ID
    (14) param -> . INSTR EQUAL INT
    (15) param -> . TONE EQUAL INT
    (16) param -> . TONE EQUAL ID
    (17) param -> . SLEEP EQUAL INT
    (18) param -> . SLEEP EQUAL ID
    (19) param -> . CALL TWOPOINTS ID

    AMP             shift and go to state 13
    DUR             shift and go to state 14
    INSTR           shift and go to state 15
    TONE            shift and go to state 16
    SLEEP           shift and go to state 17
    CALL            shift and go to state 18

    param                          shift and go to state 38

state 26

    (21) command -> PLAY TWOPOINTS . playcontent
    (22) playcontent -> . LBRACKET seqexp RBRACKET
    (23) playcontent -> . ID
    (24) playcontent -> . acc
    (39) acc -> . LPAREN seqnotas RPAREN
=======
    label                          shift and go to state 10

state 23

    (15) command -> command COMMA . param
    (9) param -> . AMP EQUAL exp2
    (10) param -> . DUR EQUAL exp2
    (11) param -> . INSTR EQUAL exp2
    (12) param -> . TONE EQUAL exp2
    (13) param -> . SLEEP EQUAL exp2
    (14) param -> . CALL TWOPOINTS ID

    AMP             shift and go to state 12
    DUR             shift and go to state 13
    INSTR           shift and go to state 14
    TONE            shift and go to state 15
    SLEEP           shift and go to state 16
    CALL            shift and go to state 17

    param                          shift and go to state 35

state 24

    (16) command -> PLAY TWOPOINTS . playcontent
    (17) playcontent -> . LBRACKET seqexp RBRACKET
    (18) playcontent -> . ID
    (19) playcontent -> . acc
    (38) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 37
    ID              shift and go to state 38
    LPAREN          shift and go to state 40

    playcontent                    shift and go to state 36
    acc                            shift and go to state 39

state 25

    (9) param -> AMP EQUAL . exp2
    (30) exp2 -> . nota rec_op2
    (41) nota -> . INT
    (42) nota -> . ID

    INT             shift and go to state 43
    ID              shift and go to state 44

    exp2                           shift and go to state 41
    nota                           shift and go to state 42

state 26

    (10) param -> DUR EQUAL . exp2
    (30) exp2 -> . nota rec_op2
    (41) nota -> . INT
    (42) nota -> . ID
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    LBRACKET        shift and go to state 40
    ID              shift and go to state 41
    LPAREN          shift and go to state 43

<<<<<<< HEAD
    playcontent                    shift and go to state 39
    acc                            shift and go to state 42

state 27

    (10) param -> AMP EQUAL . INT
    (11) param -> AMP EQUAL . ID

    INT             shift and go to state 44
    ID              shift and go to state 45
=======
    exp2                           shift and go to state 45
    nota                           shift and go to state 42

state 27

    (11) param -> INSTR EQUAL . exp2
    (30) exp2 -> . nota rec_op2
    (41) nota -> . INT
    (42) nota -> . ID

    INT             shift and go to state 43
    ID              shift and go to state 44
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    exp2                           shift and go to state 46
    nota                           shift and go to state 42

state 28

<<<<<<< HEAD
    (12) param -> DUR EQUAL . INT
    (13) param -> DUR EQUAL . ID
=======
    (12) param -> TONE EQUAL . exp2
    (30) exp2 -> . nota rec_op2
    (41) nota -> . INT
    (42) nota -> . ID
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    INT             shift and go to state 43
    ID              shift and go to state 44

    exp2                           shift and go to state 47
    nota                           shift and go to state 42

state 29

<<<<<<< HEAD
    (14) param -> INSTR EQUAL . INT

    INT             shift and go to state 48
=======
    (13) param -> SLEEP EQUAL . exp2
    (30) exp2 -> . nota rec_op2
    (41) nota -> . INT
    (42) nota -> . ID

    INT             shift and go to state 43
    ID              shift and go to state 44
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    exp2                           shift and go to state 48
    nota                           shift and go to state 42

state 30

<<<<<<< HEAD
    (15) param -> TONE EQUAL . INT
    (16) param -> TONE EQUAL . ID

    INT             shift and go to state 49
    ID              shift and go to state 50
=======
    (14) param -> CALL TWOPOINTS . ID

    ID              shift and go to state 49
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 31

<<<<<<< HEAD
    (17) param -> SLEEP EQUAL . INT
    (18) param -> SLEEP EQUAL . ID

    INT             shift and go to state 51
    ID              shift and go to state 52
=======
    (20) assignation -> VAR ID . EQUAL exp

    EQUAL           shift and go to state 50
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 32

    (19) param -> CALL TWOPOINTS . ID

<<<<<<< HEAD
    ID              shift and go to state 53
=======
    TWOPOINTS       shift and go to state 51
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 33

    (25) assignation -> VAR ID . EQUAL exp

<<<<<<< HEAD
    EQUAL           shift and go to state 54
=======
    TWOPOINTS       shift and go to state 52
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 34

    (44) loop -> REPEAT INT . TWOPOINTS NEWLINE program ENDREPEAT

    TWOPOINTS       shift and go to state 55


state 35

<<<<<<< HEAD
    (45) sequence -> SEQUENCE ID . TWOPOINTS NEWLINE program ENDSEQUENCE

    TWOPOINTS       shift and go to state 56
=======
    (15) command -> command COMMA param .

    COMMA           reduce using rule 15 (command -> command COMMA param .)
    NEWLINE         reduce using rule 15 (command -> command COMMA param .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 36

<<<<<<< HEAD
    (46) track -> TRACK ID . TWOPOINTS NEWLINE program ENDTRACK

    TWOPOINTS       shift and go to state 57
=======
    (16) command -> PLAY TWOPOINTS playcontent .

    COMMA           reduce using rule 16 (command -> PLAY TWOPOINTS playcontent .)
    NEWLINE         reduce using rule 16 (command -> PLAY TWOPOINTS playcontent .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 37

<<<<<<< HEAD
    (3) program -> statement NEWLINE program .

    END             reduce using rule 3 (program -> statement NEWLINE program .)
    ENDREPEAT       reduce using rule 3 (program -> statement NEWLINE program .)
    ENDSEQUENCE     reduce using rule 3 (program -> statement NEWLINE program .)
    ENDTRACK        reduce using rule 3 (program -> statement NEWLINE program .)


state 38

    (20) command -> command COMMA param .

    COMMA           reduce using rule 20 (command -> command COMMA param .)
    NEWLINE         reduce using rule 20 (command -> command COMMA param .)
=======
    (17) playcontent -> LBRACKET . seqexp RBRACKET
    (24) seqexp -> . exp COMMA seqexp
    (25) seqexp -> . exp
    (21) exp -> . LBRACKET seqsound RBRACKET rec_op
    (22) exp -> . nota rec_op
    (23) exp -> . acc rec_op
    (41) nota -> . INT
    (42) nota -> . ID
    (38) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 53
    INT             shift and go to state 43
    ID              shift and go to state 44
    LPAREN          shift and go to state 40

    seqexp                         shift and go to state 54
    exp                            shift and go to state 55
    nota                           shift and go to state 56
    acc                            shift and go to state 57

state 38

    (18) playcontent -> ID .

    COMMA           reduce using rule 18 (playcontent -> ID .)
    NEWLINE         reduce using rule 18 (playcontent -> ID .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 39

<<<<<<< HEAD
    (21) command -> PLAY TWOPOINTS playcontent .

    COMMA           reduce using rule 21 (command -> PLAY TWOPOINTS playcontent .)
    NEWLINE         reduce using rule 21 (command -> PLAY TWOPOINTS playcontent .)
=======
    (19) playcontent -> acc .

    COMMA           reduce using rule 19 (playcontent -> acc .)
    NEWLINE         reduce using rule 19 (playcontent -> acc .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 40

<<<<<<< HEAD
    (22) playcontent -> LBRACKET . seqexp RBRACKET
    (29) seqexp -> . exp COMMA seqexp
    (30) seqexp -> . exp
    (26) exp -> . LBRACKET seqsound RBRACKET rec_op
    (27) exp -> . nota rec_op
    (28) exp -> . acc rec_op
    (42) nota -> . INT
    (43) nota -> . ID
    (39) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 58
    INT             shift and go to state 63
    ID              shift and go to state 64
    LPAREN          shift and go to state 43

    seqexp                         shift and go to state 59
    exp                            shift and go to state 60
    nota                           shift and go to state 61
    acc                            shift and go to state 62

state 41

    (23) playcontent -> ID .

    COMMA           reduce using rule 23 (playcontent -> ID .)
    NEWLINE         reduce using rule 23 (playcontent -> ID .)
=======
    (38) acc -> LPAREN . seqnotas RPAREN
    (39) seqnotas -> . nota
    (40) seqnotas -> . nota COMMA seqnotas
    (41) nota -> . INT
    (42) nota -> . ID

    INT             shift and go to state 43
    ID              shift and go to state 44

    seqnotas                       shift and go to state 58
    nota                           shift and go to state 59

state 41

    (9) param -> AMP EQUAL exp2 .

    NEWLINE         reduce using rule 9 (param -> AMP EQUAL exp2 .)
    COMMA           reduce using rule 9 (param -> AMP EQUAL exp2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 42

<<<<<<< HEAD
    (24) playcontent -> acc .

    COMMA           reduce using rule 24 (playcontent -> acc .)
    NEWLINE         reduce using rule 24 (playcontent -> acc .)
=======
    (30) exp2 -> nota . rec_op2
    (31) rec_op2 -> .
    (32) rec_op2 -> . SUM exp2
    (33) rec_op2 -> . MINUS exp2

    NEWLINE         reduce using rule 31 (rec_op2 -> .)
    COMMA           reduce using rule 31 (rec_op2 -> .)
    SUM             shift and go to state 61
    MINUS           shift and go to state 62
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    rec_op2                        shift and go to state 60

state 43

<<<<<<< HEAD
    (39) acc -> LPAREN . seqnotas RPAREN
    (40) seqnotas -> . nota
    (41) seqnotas -> . nota COMMA seqnotas
    (42) nota -> . INT
    (43) nota -> . ID

    INT             shift and go to state 63
    ID              shift and go to state 64
=======
    (41) nota -> INT .

    SUM             reduce using rule 41 (nota -> INT .)
    MINUS           reduce using rule 41 (nota -> INT .)
    NEWLINE         reduce using rule 41 (nota -> INT .)
    COMMA           reduce using rule 41 (nota -> INT .)
    AMPERSAND       reduce using rule 41 (nota -> INT .)
    RBRACKET        reduce using rule 41 (nota -> INT .)
    RPAREN          reduce using rule 41 (nota -> INT .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    seqnotas                       shift and go to state 65
    nota                           shift and go to state 66

state 44

<<<<<<< HEAD
    (10) param -> AMP EQUAL INT .

    NEWLINE         reduce using rule 10 (param -> AMP EQUAL INT .)
    COMMA           reduce using rule 10 (param -> AMP EQUAL INT .)
=======
    (42) nota -> ID .

    SUM             reduce using rule 42 (nota -> ID .)
    MINUS           reduce using rule 42 (nota -> ID .)
    NEWLINE         reduce using rule 42 (nota -> ID .)
    COMMA           reduce using rule 42 (nota -> ID .)
    AMPERSAND       reduce using rule 42 (nota -> ID .)
    RBRACKET        reduce using rule 42 (nota -> ID .)
    RPAREN          reduce using rule 42 (nota -> ID .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 45

<<<<<<< HEAD
    (11) param -> AMP EQUAL ID .

    NEWLINE         reduce using rule 11 (param -> AMP EQUAL ID .)
    COMMA           reduce using rule 11 (param -> AMP EQUAL ID .)
=======
    (10) param -> DUR EQUAL exp2 .

    NEWLINE         reduce using rule 10 (param -> DUR EQUAL exp2 .)
    COMMA           reduce using rule 10 (param -> DUR EQUAL exp2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 46

<<<<<<< HEAD
    (12) param -> DUR EQUAL INT .

    NEWLINE         reduce using rule 12 (param -> DUR EQUAL INT .)
    COMMA           reduce using rule 12 (param -> DUR EQUAL INT .)
=======
    (11) param -> INSTR EQUAL exp2 .

    NEWLINE         reduce using rule 11 (param -> INSTR EQUAL exp2 .)
    COMMA           reduce using rule 11 (param -> INSTR EQUAL exp2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 47

<<<<<<< HEAD
    (13) param -> DUR EQUAL ID .

    NEWLINE         reduce using rule 13 (param -> DUR EQUAL ID .)
    COMMA           reduce using rule 13 (param -> DUR EQUAL ID .)
=======
    (12) param -> TONE EQUAL exp2 .

    NEWLINE         reduce using rule 12 (param -> TONE EQUAL exp2 .)
    COMMA           reduce using rule 12 (param -> TONE EQUAL exp2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 48

<<<<<<< HEAD
    (14) param -> INSTR EQUAL INT .

    NEWLINE         reduce using rule 14 (param -> INSTR EQUAL INT .)
    COMMA           reduce using rule 14 (param -> INSTR EQUAL INT .)
=======
    (13) param -> SLEEP EQUAL exp2 .

    NEWLINE         reduce using rule 13 (param -> SLEEP EQUAL exp2 .)
    COMMA           reduce using rule 13 (param -> SLEEP EQUAL exp2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 49

<<<<<<< HEAD
    (15) param -> TONE EQUAL INT .

    NEWLINE         reduce using rule 15 (param -> TONE EQUAL INT .)
    COMMA           reduce using rule 15 (param -> TONE EQUAL INT .)
=======
    (14) param -> CALL TWOPOINTS ID .

    NEWLINE         reduce using rule 14 (param -> CALL TWOPOINTS ID .)
    COMMA           reduce using rule 14 (param -> CALL TWOPOINTS ID .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 50

<<<<<<< HEAD
    (16) param -> TONE EQUAL ID .

    NEWLINE         reduce using rule 16 (param -> TONE EQUAL ID .)
    COMMA           reduce using rule 16 (param -> TONE EQUAL ID .)


state 51

    (17) param -> SLEEP EQUAL INT .

    NEWLINE         reduce using rule 17 (param -> SLEEP EQUAL INT .)
    COMMA           reduce using rule 17 (param -> SLEEP EQUAL INT .)

=======
    (20) assignation -> VAR ID EQUAL . exp
    (21) exp -> . LBRACKET seqsound RBRACKET rec_op
    (22) exp -> . nota rec_op
    (23) exp -> . acc rec_op
    (41) nota -> . INT
    (42) nota -> . ID
    (38) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 53
    INT             shift and go to state 43
    ID              shift and go to state 44
    LPAREN          shift and go to state 40

    exp                            shift and go to state 63
    nota                           shift and go to state 56
    acc                            shift and go to state 57
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

state 51

    (18) param -> SLEEP EQUAL ID .

    NEWLINE         reduce using rule 18 (param -> SLEEP EQUAL ID .)
    COMMA           reduce using rule 18 (param -> SLEEP EQUAL ID .)


state 52

    (19) param -> CALL TWOPOINTS ID .

    NEWLINE         reduce using rule 19 (param -> CALL TWOPOINTS ID .)
    COMMA           reduce using rule 19 (param -> CALL TWOPOINTS ID .)


state 53

<<<<<<< HEAD
    (25) assignation -> VAR ID EQUAL . exp
    (26) exp -> . LBRACKET seqsound RBRACKET rec_op
    (27) exp -> . nota rec_op
    (28) exp -> . acc rec_op
    (42) nota -> . INT
    (43) nota -> . ID
    (39) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 58
    INT             shift and go to state 63
    ID              shift and go to state 64
    LPAREN          shift and go to state 43
=======
    (21) exp -> LBRACKET . seqsound RBRACKET rec_op
    (34) seqsound -> . sound COMMA seqsound
    (35) seqsound -> . sound
    (36) sound -> . acc
    (37) sound -> . nota
    (38) acc -> . LPAREN seqnotas RPAREN
    (41) nota -> . INT
    (42) nota -> . ID

    LPAREN          shift and go to state 40
    INT             shift and go to state 43
    ID              shift and go to state 44
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    exp                            shift and go to state 67
    nota                           shift and go to state 61
    acc                            shift and go to state 62

state 54

<<<<<<< HEAD
    (44) loop -> REPEAT INT TWOPOINTS . NEWLINE program ENDREPEAT
=======
    (17) playcontent -> LBRACKET seqexp . RBRACKET
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    NEWLINE         shift and go to state 68


state 55

<<<<<<< HEAD
    (45) sequence -> SEQUENCE ID TWOPOINTS . NEWLINE program ENDSEQUENCE

    NEWLINE         shift and go to state 69
=======
    (24) seqexp -> exp . COMMA seqexp
    (25) seqexp -> exp .

    COMMA           shift and go to state 71
    RBRACKET        reduce using rule 25 (seqexp -> exp .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 56

<<<<<<< HEAD
    (46) track -> TRACK ID TWOPOINTS . NEWLINE program ENDTRACK

    NEWLINE         shift and go to state 70
=======
    (22) exp -> nota . rec_op
    (26) rec_op -> .
    (27) rec_op -> . SUM exp
    (28) rec_op -> . MINUS exp
    (29) rec_op -> . AMPERSAND exp

    COMMA           reduce using rule 26 (rec_op -> .)
    RBRACKET        reduce using rule 26 (rec_op -> .)
    NEWLINE         reduce using rule 26 (rec_op -> .)
    SUM             shift and go to state 73
    MINUS           shift and go to state 74
    AMPERSAND       shift and go to state 75
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 57

<<<<<<< HEAD
    (26) exp -> LBRACKET . seqsound RBRACKET rec_op
    (35) seqsound -> . sound COMMA seqsound
    (36) seqsound -> . sound
    (37) sound -> . acc
    (38) sound -> . nota
    (39) acc -> . LPAREN seqnotas RPAREN
    (42) nota -> . INT
    (43) nota -> . ID

    LPAREN          shift and go to state 43
    INT             shift and go to state 63
    ID              shift and go to state 64
=======
    (23) exp -> acc . rec_op
    (26) rec_op -> .
    (27) rec_op -> . SUM exp
    (28) rec_op -> . MINUS exp
    (29) rec_op -> . AMPERSAND exp

    COMMA           reduce using rule 26 (rec_op -> .)
    RBRACKET        reduce using rule 26 (rec_op -> .)
    NEWLINE         reduce using rule 26 (rec_op -> .)
    SUM             shift and go to state 73
    MINUS           shift and go to state 74
    AMPERSAND       shift and go to state 75
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    seqsound                       shift and go to state 71
    sound                          shift and go to state 72
    acc                            shift and go to state 73
    nota                           shift and go to state 74

state 58

    (38) acc -> LPAREN seqnotas . RPAREN

    RPAREN          shift and go to state 77


state 59

<<<<<<< HEAD
    (22) playcontent -> LBRACKET seqexp . RBRACKET

    RBRACKET        shift and go to state 75
=======
    (39) seqnotas -> nota .
    (40) seqnotas -> nota . COMMA seqnotas

    RPAREN          reduce using rule 39 (seqnotas -> nota .)
    COMMA           shift and go to state 78
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 60

<<<<<<< HEAD
    (29) seqexp -> exp . COMMA seqexp
    (30) seqexp -> exp .

    COMMA           shift and go to state 76
    RBRACKET        reduce using rule 30 (seqexp -> exp .)
=======
    (30) exp2 -> nota rec_op2 .

    NEWLINE         reduce using rule 30 (exp2 -> nota rec_op2 .)
    COMMA           reduce using rule 30 (exp2 -> nota rec_op2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 61

<<<<<<< HEAD
    (27) exp -> nota . rec_op
    (31) rec_op -> .
    (32) rec_op -> . SUM exp
    (33) rec_op -> . MINUS exp
    (34) rec_op -> . AMPERSAND exp

    COMMA           reduce using rule 31 (rec_op -> .)
    RBRACKET        reduce using rule 31 (rec_op -> .)
    NEWLINE         reduce using rule 31 (rec_op -> .)
    SUM             shift and go to state 78
    MINUS           shift and go to state 79
    AMPERSAND       shift and go to state 80

    rec_op                         shift and go to state 77

state 62

    (28) exp -> acc . rec_op
    (31) rec_op -> .
    (32) rec_op -> . SUM exp
    (33) rec_op -> . MINUS exp
    (34) rec_op -> . AMPERSAND exp

    COMMA           reduce using rule 31 (rec_op -> .)
    RBRACKET        reduce using rule 31 (rec_op -> .)
    NEWLINE         reduce using rule 31 (rec_op -> .)
    SUM             shift and go to state 78
    MINUS           shift and go to state 79
    AMPERSAND       shift and go to state 80

    rec_op                         shift and go to state 81

state 63

    (42) nota -> INT .

    SUM             reduce using rule 42 (nota -> INT .)
    MINUS           reduce using rule 42 (nota -> INT .)
    AMPERSAND       reduce using rule 42 (nota -> INT .)
    COMMA           reduce using rule 42 (nota -> INT .)
    RBRACKET        reduce using rule 42 (nota -> INT .)
    RPAREN          reduce using rule 42 (nota -> INT .)
    NEWLINE         reduce using rule 42 (nota -> INT .)
=======
    (32) rec_op2 -> SUM . exp2
    (30) exp2 -> . nota rec_op2
    (41) nota -> . INT
    (42) nota -> . ID

    INT             shift and go to state 43
    ID              shift and go to state 44

    exp2                           shift and go to state 79
    nota                           shift and go to state 42

state 62

    (33) rec_op2 -> MINUS . exp2
    (30) exp2 -> . nota rec_op2
    (41) nota -> . INT
    (42) nota -> . ID

    INT             shift and go to state 43
    ID              shift and go to state 44

    exp2                           shift and go to state 80
    nota                           shift and go to state 42

state 63

    (20) assignation -> VAR ID EQUAL exp .

    NEWLINE         reduce using rule 20 (assignation -> VAR ID EQUAL exp .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 64

    (43) nota -> ID .

    SUM             reduce using rule 43 (nota -> ID .)
    MINUS           reduce using rule 43 (nota -> ID .)
    AMPERSAND       reduce using rule 43 (nota -> ID .)
    COMMA           reduce using rule 43 (nota -> ID .)
    RBRACKET        reduce using rule 43 (nota -> ID .)
    RPAREN          reduce using rule 43 (nota -> ID .)
    NEWLINE         reduce using rule 43 (nota -> ID .)


state 65

    (39) acc -> LPAREN seqnotas . RPAREN

    RPAREN          shift and go to state 82


state 66

    (40) seqnotas -> nota .
    (41) seqnotas -> nota . COMMA seqnotas

    RPAREN          reduce using rule 40 (seqnotas -> nota .)
    COMMA           shift and go to state 83


state 67

    (25) assignation -> VAR ID EQUAL exp .

    NEWLINE         reduce using rule 25 (assignation -> VAR ID EQUAL exp .)


state 68

    (44) loop -> REPEAT INT TWOPOINTS NEWLINE . program ENDREPEAT
    (2) program -> . statement NEWLINE
    (3) program -> . statement NEWLINE program
    (4) statement -> . command
    (5) statement -> . param
    (6) statement -> . assignation
    (7) statement -> . loop
<<<<<<< HEAD
    (8) statement -> . sequence
    (9) statement -> . track
    (20) command -> . command COMMA param
    (21) command -> . PLAY TWOPOINTS playcontent
    (10) param -> . AMP EQUAL INT
    (11) param -> . AMP EQUAL ID
    (12) param -> . DUR EQUAL INT
    (13) param -> . DUR EQUAL ID
    (14) param -> . INSTR EQUAL INT
    (15) param -> . TONE EQUAL INT
    (16) param -> . TONE EQUAL ID
    (17) param -> . SLEEP EQUAL INT
    (18) param -> . SLEEP EQUAL ID
    (19) param -> . CALL TWOPOINTS ID
    (25) assignation -> . VAR ID EQUAL exp
    (44) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (45) sequence -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE
    (46) track -> . TRACK ID TWOPOINTS NEWLINE program ENDTRACK

    PLAY            shift and go to state 12
    AMP             shift and go to state 13
    DUR             shift and go to state 14
    INSTR           shift and go to state 15
    TONE            shift and go to state 16
    SLEEP           shift and go to state 17
    CALL            shift and go to state 18
    VAR             shift and go to state 19
    REPEAT          shift and go to state 20
    SEQUENCE        shift and go to state 21
    TRACK           shift and go to state 22

    program                        shift and go to state 84
=======
    (8) statement -> . label
    (15) command -> . command COMMA param
    (16) command -> . PLAY TWOPOINTS playcontent
    (9) param -> . AMP EQUAL exp2
    (10) param -> . DUR EQUAL exp2
    (11) param -> . INSTR EQUAL exp2
    (12) param -> . TONE EQUAL exp2
    (13) param -> . SLEEP EQUAL exp2
    (14) param -> . CALL TWOPOINTS ID
    (20) assignation -> . VAR ID EQUAL exp
    (43) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (44) label -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE

    PLAY            shift and go to state 11
    AMP             shift and go to state 12
    DUR             shift and go to state 13
    INSTR           shift and go to state 14
    TONE            shift and go to state 15
    SLEEP           shift and go to state 16
    CALL            shift and go to state 17
    VAR             shift and go to state 18
    REPEAT          shift and go to state 19
    SEQUENCE        shift and go to state 20

    program                        shift and go to state 81
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b
    statement                      shift and go to state 5
    command                        shift and go to state 6
    param                          shift and go to state 7
    assignation                    shift and go to state 8
    loop                           shift and go to state 9
    sequence                       shift and go to state 10
    track                          shift and go to state 11

state 69

    (45) sequence -> SEQUENCE ID TWOPOINTS NEWLINE . program ENDSEQUENCE
    (2) program -> . statement NEWLINE
    (3) program -> . statement NEWLINE program
    (4) statement -> . command
    (5) statement -> . param
    (6) statement -> . assignation
    (7) statement -> . loop
<<<<<<< HEAD
    (8) statement -> . sequence
    (9) statement -> . track
    (20) command -> . command COMMA param
    (21) command -> . PLAY TWOPOINTS playcontent
    (10) param -> . AMP EQUAL INT
    (11) param -> . AMP EQUAL ID
    (12) param -> . DUR EQUAL INT
    (13) param -> . DUR EQUAL ID
    (14) param -> . INSTR EQUAL INT
    (15) param -> . TONE EQUAL INT
    (16) param -> . TONE EQUAL ID
    (17) param -> . SLEEP EQUAL INT
    (18) param -> . SLEEP EQUAL ID
    (19) param -> . CALL TWOPOINTS ID
    (25) assignation -> . VAR ID EQUAL exp
    (44) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (45) sequence -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE
    (46) track -> . TRACK ID TWOPOINTS NEWLINE program ENDTRACK

    PLAY            shift and go to state 12
    AMP             shift and go to state 13
    DUR             shift and go to state 14
    INSTR           shift and go to state 15
    TONE            shift and go to state 16
    SLEEP           shift and go to state 17
    CALL            shift and go to state 18
    VAR             shift and go to state 19
    REPEAT          shift and go to state 20
    SEQUENCE        shift and go to state 21
    TRACK           shift and go to state 22

    program                        shift and go to state 85
=======
    (8) statement -> . label
    (15) command -> . command COMMA param
    (16) command -> . PLAY TWOPOINTS playcontent
    (9) param -> . AMP EQUAL exp2
    (10) param -> . DUR EQUAL exp2
    (11) param -> . INSTR EQUAL exp2
    (12) param -> . TONE EQUAL exp2
    (13) param -> . SLEEP EQUAL exp2
    (14) param -> . CALL TWOPOINTS ID
    (20) assignation -> . VAR ID EQUAL exp
    (43) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (44) label -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE

    PLAY            shift and go to state 11
    AMP             shift and go to state 12
    DUR             shift and go to state 13
    INSTR           shift and go to state 14
    TONE            shift and go to state 15
    SLEEP           shift and go to state 16
    CALL            shift and go to state 17
    VAR             shift and go to state 18
    REPEAT          shift and go to state 19
    SEQUENCE        shift and go to state 20

    program                        shift and go to state 82
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b
    statement                      shift and go to state 5
    command                        shift and go to state 6
    param                          shift and go to state 7
    assignation                    shift and go to state 8
    loop                           shift and go to state 9
<<<<<<< HEAD
    sequence                       shift and go to state 10
    track                          shift and go to state 11

state 70

    (46) track -> TRACK ID TWOPOINTS NEWLINE . program ENDTRACK
    (2) program -> . statement NEWLINE
    (3) program -> . statement NEWLINE program
    (4) statement -> . command
    (5) statement -> . param
    (6) statement -> . assignation
    (7) statement -> . loop
    (8) statement -> . sequence
    (9) statement -> . track
    (20) command -> . command COMMA param
    (21) command -> . PLAY TWOPOINTS playcontent
    (10) param -> . AMP EQUAL INT
    (11) param -> . AMP EQUAL ID
    (12) param -> . DUR EQUAL INT
    (13) param -> . DUR EQUAL ID
    (14) param -> . INSTR EQUAL INT
    (15) param -> . TONE EQUAL INT
    (16) param -> . TONE EQUAL ID
    (17) param -> . SLEEP EQUAL INT
    (18) param -> . SLEEP EQUAL ID
    (19) param -> . CALL TWOPOINTS ID
    (25) assignation -> . VAR ID EQUAL exp
    (44) loop -> . REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT
    (45) sequence -> . SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE
    (46) track -> . TRACK ID TWOPOINTS NEWLINE program ENDTRACK

    PLAY            shift and go to state 12
    AMP             shift and go to state 13
    DUR             shift and go to state 14
    INSTR           shift and go to state 15
    TONE            shift and go to state 16
    SLEEP           shift and go to state 17
    CALL            shift and go to state 18
    VAR             shift and go to state 19
    REPEAT          shift and go to state 20
    SEQUENCE        shift and go to state 21
    TRACK           shift and go to state 22

    program                        shift and go to state 86
    statement                      shift and go to state 5
    command                        shift and go to state 6
    param                          shift and go to state 7
    assignation                    shift and go to state 8
    loop                           shift and go to state 9
    sequence                       shift and go to state 10
    track                          shift and go to state 11

state 71
=======
    label                          shift and go to state 10

state 66

    (21) exp -> LBRACKET seqsound . RBRACKET rec_op

    RBRACKET        shift and go to state 83


state 67

    (34) seqsound -> sound . COMMA seqsound
    (35) seqsound -> sound .

    COMMA           shift and go to state 84
    RBRACKET        reduce using rule 35 (seqsound -> sound .)


state 68

    (36) sound -> acc .

    COMMA           reduce using rule 36 (sound -> acc .)
    RBRACKET        reduce using rule 36 (sound -> acc .)


state 69

    (37) sound -> nota .

    COMMA           reduce using rule 37 (sound -> nota .)
    RBRACKET        reduce using rule 37 (sound -> nota .)


state 70

    (17) playcontent -> LBRACKET seqexp RBRACKET .

    COMMA           reduce using rule 17 (playcontent -> LBRACKET seqexp RBRACKET .)
    NEWLINE         reduce using rule 17 (playcontent -> LBRACKET seqexp RBRACKET .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    (26) exp -> LBRACKET seqsound . RBRACKET rec_op

    RBRACKET        shift and go to state 87

<<<<<<< HEAD

state 72

    (35) seqsound -> sound . COMMA seqsound
    (36) seqsound -> sound .

    COMMA           shift and go to state 88
    RBRACKET        reduce using rule 36 (seqsound -> sound .)
=======
    (24) seqexp -> exp COMMA . seqexp
    (24) seqexp -> . exp COMMA seqexp
    (25) seqexp -> . exp
    (21) exp -> . LBRACKET seqsound RBRACKET rec_op
    (22) exp -> . nota rec_op
    (23) exp -> . acc rec_op
    (41) nota -> . INT
    (42) nota -> . ID
    (38) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 53
    INT             shift and go to state 43
    ID              shift and go to state 44
    LPAREN          shift and go to state 40

    exp                            shift and go to state 55
    seqexp                         shift and go to state 85
    nota                           shift and go to state 56
    acc                            shift and go to state 57

state 72

    (22) exp -> nota rec_op .

    COMMA           reduce using rule 22 (exp -> nota rec_op .)
    RBRACKET        reduce using rule 22 (exp -> nota rec_op .)
    NEWLINE         reduce using rule 22 (exp -> nota rec_op .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 73

<<<<<<< HEAD
    (37) sound -> acc .

    COMMA           reduce using rule 37 (sound -> acc .)
    RBRACKET        reduce using rule 37 (sound -> acc .)


state 74

    (38) sound -> nota .

    COMMA           reduce using rule 38 (sound -> nota .)
    RBRACKET        reduce using rule 38 (sound -> nota .)


state 75

    (22) playcontent -> LBRACKET seqexp RBRACKET .

    COMMA           reduce using rule 22 (playcontent -> LBRACKET seqexp RBRACKET .)
    NEWLINE         reduce using rule 22 (playcontent -> LBRACKET seqexp RBRACKET .)


state 76

    (29) seqexp -> exp COMMA . seqexp
    (29) seqexp -> . exp COMMA seqexp
    (30) seqexp -> . exp
    (26) exp -> . LBRACKET seqsound RBRACKET rec_op
    (27) exp -> . nota rec_op
    (28) exp -> . acc rec_op
    (42) nota -> . INT
    (43) nota -> . ID
    (39) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 58
    INT             shift and go to state 63
    ID              shift and go to state 64
    LPAREN          shift and go to state 43

    exp                            shift and go to state 60
    seqexp                         shift and go to state 89
    nota                           shift and go to state 61
    acc                            shift and go to state 62
=======
    (27) rec_op -> SUM . exp
    (21) exp -> . LBRACKET seqsound RBRACKET rec_op
    (22) exp -> . nota rec_op
    (23) exp -> . acc rec_op
    (41) nota -> . INT
    (42) nota -> . ID
    (38) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 53
    INT             shift and go to state 43
    ID              shift and go to state 44
    LPAREN          shift and go to state 40

    exp                            shift and go to state 86
    nota                           shift and go to state 56
    acc                            shift and go to state 57

state 74

    (28) rec_op -> MINUS . exp
    (21) exp -> . LBRACKET seqsound RBRACKET rec_op
    (22) exp -> . nota rec_op
    (23) exp -> . acc rec_op
    (41) nota -> . INT
    (42) nota -> . ID
    (38) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 53
    INT             shift and go to state 43
    ID              shift and go to state 44
    LPAREN          shift and go to state 40

    exp                            shift and go to state 87
    nota                           shift and go to state 56
    acc                            shift and go to state 57

state 75

    (29) rec_op -> AMPERSAND . exp
    (21) exp -> . LBRACKET seqsound RBRACKET rec_op
    (22) exp -> . nota rec_op
    (23) exp -> . acc rec_op
    (41) nota -> . INT
    (42) nota -> . ID
    (38) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 53
    INT             shift and go to state 43
    ID              shift and go to state 44
    LPAREN          shift and go to state 40

    exp                            shift and go to state 88
    nota                           shift and go to state 56
    acc                            shift and go to state 57

state 76

    (23) exp -> acc rec_op .

    COMMA           reduce using rule 23 (exp -> acc rec_op .)
    RBRACKET        reduce using rule 23 (exp -> acc rec_op .)
    NEWLINE         reduce using rule 23 (exp -> acc rec_op .)

>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

state 77

    (27) exp -> nota rec_op .

    COMMA           reduce using rule 27 (exp -> nota rec_op .)
    RBRACKET        reduce using rule 27 (exp -> nota rec_op .)
    NEWLINE         reduce using rule 27 (exp -> nota rec_op .)


state 78

    (32) rec_op -> SUM . exp
    (26) exp -> . LBRACKET seqsound RBRACKET rec_op
    (27) exp -> . nota rec_op
    (28) exp -> . acc rec_op
    (42) nota -> . INT
    (43) nota -> . ID
    (39) acc -> . LPAREN seqnotas RPAREN

<<<<<<< HEAD
    LBRACKET        shift and go to state 58
    INT             shift and go to state 63
    ID              shift and go to state 64
    LPAREN          shift and go to state 43

    exp                            shift and go to state 90
    nota                           shift and go to state 61
    acc                            shift and go to state 62

state 79

    (33) rec_op -> MINUS . exp
    (26) exp -> . LBRACKET seqsound RBRACKET rec_op
    (27) exp -> . nota rec_op
    (28) exp -> . acc rec_op
    (42) nota -> . INT
    (43) nota -> . ID
    (39) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 58
    INT             shift and go to state 63
    ID              shift and go to state 64
    LPAREN          shift and go to state 43
=======
    INT             shift and go to state 43
    ID              shift and go to state 44

    nota                           shift and go to state 59
    seqnotas                       shift and go to state 89

state 79

    (32) rec_op2 -> SUM exp2 .

    NEWLINE         reduce using rule 32 (rec_op2 -> SUM exp2 .)
    COMMA           reduce using rule 32 (rec_op2 -> SUM exp2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    exp                            shift and go to state 91
    nota                           shift and go to state 61
    acc                            shift and go to state 62

state 80

<<<<<<< HEAD
    (34) rec_op -> AMPERSAND . exp
    (26) exp -> . LBRACKET seqsound RBRACKET rec_op
    (27) exp -> . nota rec_op
    (28) exp -> . acc rec_op
    (42) nota -> . INT
    (43) nota -> . ID
    (39) acc -> . LPAREN seqnotas RPAREN

    LBRACKET        shift and go to state 58
    INT             shift and go to state 63
    ID              shift and go to state 64
    LPAREN          shift and go to state 43
=======
    (33) rec_op2 -> MINUS exp2 .

    NEWLINE         reduce using rule 33 (rec_op2 -> MINUS exp2 .)
    COMMA           reduce using rule 33 (rec_op2 -> MINUS exp2 .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    exp                            shift and go to state 92
    nota                           shift and go to state 61
    acc                            shift and go to state 62

state 81

<<<<<<< HEAD
    (28) exp -> acc rec_op .

    COMMA           reduce using rule 28 (exp -> acc rec_op .)
    RBRACKET        reduce using rule 28 (exp -> acc rec_op .)
    NEWLINE         reduce using rule 28 (exp -> acc rec_op .)

=======
    (43) loop -> REPEAT INT TWOPOINTS NEWLINE program . ENDREPEAT

    ENDREPEAT       shift and go to state 90


state 82

    (44) label -> SEQUENCE ID TWOPOINTS NEWLINE program . ENDSEQUENCE

    ENDSEQUENCE     shift and go to state 91


state 83

    (21) exp -> LBRACKET seqsound RBRACKET . rec_op
    (26) rec_op -> .
    (27) rec_op -> . SUM exp
    (28) rec_op -> . MINUS exp
    (29) rec_op -> . AMPERSAND exp

    COMMA           reduce using rule 26 (rec_op -> .)
    RBRACKET        reduce using rule 26 (rec_op -> .)
    NEWLINE         reduce using rule 26 (rec_op -> .)
    SUM             shift and go to state 73
    MINUS           shift and go to state 74
    AMPERSAND       shift and go to state 75

    rec_op                         shift and go to state 92
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

state 84

    (39) acc -> LPAREN seqnotas RPAREN .

<<<<<<< HEAD
    COMMA           reduce using rule 39 (acc -> LPAREN seqnotas RPAREN .)
    NEWLINE         reduce using rule 39 (acc -> LPAREN seqnotas RPAREN .)
    SUM             reduce using rule 39 (acc -> LPAREN seqnotas RPAREN .)
    MINUS           reduce using rule 39 (acc -> LPAREN seqnotas RPAREN .)
    AMPERSAND       reduce using rule 39 (acc -> LPAREN seqnotas RPAREN .)
    RBRACKET        reduce using rule 39 (acc -> LPAREN seqnotas RPAREN .)

=======
    LPAREN          shift and go to state 40
    INT             shift and go to state 43
    ID              shift and go to state 44

    sound                          shift and go to state 67
    seqsound                       shift and go to state 93
    acc                            shift and go to state 68
    nota                           shift and go to state 69
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

state 85

<<<<<<< HEAD
    (41) seqnotas -> nota COMMA . seqnotas
    (40) seqnotas -> . nota
    (41) seqnotas -> . nota COMMA seqnotas
    (42) nota -> . INT
    (43) nota -> . ID

    INT             shift and go to state 63
    ID              shift and go to state 64
=======
    (24) seqexp -> exp COMMA seqexp .

    RBRACKET        reduce using rule 24 (seqexp -> exp COMMA seqexp .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b

    nota                           shift and go to state 66
    seqnotas                       shift and go to state 93

state 86

<<<<<<< HEAD
    (44) loop -> REPEAT INT TWOPOINTS NEWLINE program . ENDREPEAT

    ENDREPEAT       shift and go to state 94
=======
    (27) rec_op -> SUM exp .

    COMMA           reduce using rule 27 (rec_op -> SUM exp .)
    RBRACKET        reduce using rule 27 (rec_op -> SUM exp .)
    NEWLINE         reduce using rule 27 (rec_op -> SUM exp .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 87

<<<<<<< HEAD
    (45) sequence -> SEQUENCE ID TWOPOINTS NEWLINE program . ENDSEQUENCE

    ENDSEQUENCE     shift and go to state 95
=======
    (28) rec_op -> MINUS exp .

    COMMA           reduce using rule 28 (rec_op -> MINUS exp .)
    RBRACKET        reduce using rule 28 (rec_op -> MINUS exp .)
    NEWLINE         reduce using rule 28 (rec_op -> MINUS exp .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 88

<<<<<<< HEAD
    (46) track -> TRACK ID TWOPOINTS NEWLINE program . ENDTRACK

    ENDTRACK        shift and go to state 96
=======
    (29) rec_op -> AMPERSAND exp .

    COMMA           reduce using rule 29 (rec_op -> AMPERSAND exp .)
    RBRACKET        reduce using rule 29 (rec_op -> AMPERSAND exp .)
    NEWLINE         reduce using rule 29 (rec_op -> AMPERSAND exp .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 89

    (26) exp -> LBRACKET seqsound RBRACKET . rec_op
    (31) rec_op -> .
    (32) rec_op -> . SUM exp
    (33) rec_op -> . MINUS exp
    (34) rec_op -> . AMPERSAND exp

    COMMA           reduce using rule 31 (rec_op -> .)
    RBRACKET        reduce using rule 31 (rec_op -> .)
    NEWLINE         reduce using rule 31 (rec_op -> .)
    SUM             shift and go to state 78
    MINUS           shift and go to state 79
    AMPERSAND       shift and go to state 80

    rec_op                         shift and go to state 97

state 90

    (35) seqsound -> sound COMMA . seqsound
    (35) seqsound -> . sound COMMA seqsound
    (36) seqsound -> . sound
    (37) sound -> . acc
    (38) sound -> . nota
    (39) acc -> . LPAREN seqnotas RPAREN
    (42) nota -> . INT
    (43) nota -> . ID

    LPAREN          shift and go to state 43
    INT             shift and go to state 63
    ID              shift and go to state 64

    sound                          shift and go to state 72
    seqsound                       shift and go to state 98
    acc                            shift and go to state 73
    nota                           shift and go to state 74

state 91

    (29) seqexp -> exp COMMA seqexp .

    RBRACKET        reduce using rule 29 (seqexp -> exp COMMA seqexp .)


state 92

<<<<<<< HEAD
    (32) rec_op -> SUM exp .

    COMMA           reduce using rule 32 (rec_op -> SUM exp .)
    RBRACKET        reduce using rule 32 (rec_op -> SUM exp .)
    NEWLINE         reduce using rule 32 (rec_op -> SUM exp .)
=======
    (21) exp -> LBRACKET seqsound RBRACKET rec_op .

    COMMA           reduce using rule 21 (exp -> LBRACKET seqsound RBRACKET rec_op .)
    RBRACKET        reduce using rule 21 (exp -> LBRACKET seqsound RBRACKET rec_op .)
    NEWLINE         reduce using rule 21 (exp -> LBRACKET seqsound RBRACKET rec_op .)
>>>>>>> 4867c6afc86c25b6c3250186af20be336079329b


state 93

    (33) rec_op -> MINUS exp .

    COMMA           reduce using rule 33 (rec_op -> MINUS exp .)
    RBRACKET        reduce using rule 33 (rec_op -> MINUS exp .)
    NEWLINE         reduce using rule 33 (rec_op -> MINUS exp .)


state 92

    (34) rec_op -> AMPERSAND exp .

    COMMA           reduce using rule 34 (rec_op -> AMPERSAND exp .)
    RBRACKET        reduce using rule 34 (rec_op -> AMPERSAND exp .)
    NEWLINE         reduce using rule 34 (rec_op -> AMPERSAND exp .)


state 93

    (41) seqnotas -> nota COMMA seqnotas .

    RPAREN          reduce using rule 41 (seqnotas -> nota COMMA seqnotas .)


state 94

    (44) loop -> REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT .

    NEWLINE         reduce using rule 44 (loop -> REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT .)


state 95

    (45) sequence -> SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE .

    NEWLINE         reduce using rule 45 (sequence -> SEQUENCE ID TWOPOINTS NEWLINE program ENDSEQUENCE .)


state 96

    (46) track -> TRACK ID TWOPOINTS NEWLINE program ENDTRACK .

    NEWLINE         reduce using rule 46 (track -> TRACK ID TWOPOINTS NEWLINE program ENDTRACK .)


state 97

    (26) exp -> LBRACKET seqsound RBRACKET rec_op .

    COMMA           reduce using rule 26 (exp -> LBRACKET seqsound RBRACKET rec_op .)
    RBRACKET        reduce using rule 26 (exp -> LBRACKET seqsound RBRACKET rec_op .)
    NEWLINE         reduce using rule 26 (exp -> LBRACKET seqsound RBRACKET rec_op .)


state 98

    (35) seqsound -> sound COMMA seqsound .

    RBRACKET        reduce using rule 35 (seqsound -> sound COMMA seqsound .)

