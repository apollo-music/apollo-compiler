
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMP COMMA DUR END ENDREPEAT ID INSTR INT LBRACKET LPAREN MINUS MULTIPLY NEWLINE PLAY RBRACKET REPEAT RPAREN START SUM TWOPOINTS VARprogram2 : START NEWLINE program ENDprogram : statement NEWLINEprogram : statement NEWLINE programstatement : command\n\t\t| param\n\t\t| assignation\n\t\t| loopparam : AMP TWOPOINTS INTparam : DUR TWOPOINTS INTparam : INSTR TWOPOINTS INTcommand : command COMMA paramcommand : PLAY TWOPOINTS LBRACKET expression RBRACKETassignation : VAR ID TWOPOINTS LBRACKET expression RBRACKETassignation : VAR ID TWOPOINTS accassignation : VAR ID TWOPOINTS INTexpression : accexpression : acc COMMA expressionacc : LPAREN seqnotas RPARENacc : notaseqnotas : notaseqnotas : nota COMMA seqnotasnota : nota SUM nota \n\t| nota MINUS nota \n\t| nota MULTIPLY notanota : INTnota : IDloop : REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT'
    
_lr_action_items = {'COMMA':([12,26,27,31,32,33,36,37,38,43,45,53,55,56,57,],[22,-10,-9,-11,-8,-25,46,-26,-19,52,-12,-18,-23,-24,-22,]),'PLAY':([3,19,42,],[4,4,4,]),'INSTR':([3,19,22,42,],[5,5,5,5,]),'LPAREN':([25,29,41,46,],[34,34,34,34,]),'MULTIPLY':([33,37,38,39,43,55,56,57,],[-25,-26,48,-25,48,48,48,48,]),'$end':([1,23,],[0,-1,]),'VAR':([3,19,42,],[10,10,10,]),'TWOPOINTS':([4,5,7,15,20,21,],[16,17,18,24,29,30,]),'LBRACKET':([16,29,],[25,41,]),'SUM':([33,37,38,39,43,55,56,57,],[-25,-26,49,-25,49,49,49,49,]),'REPEAT':([3,19,42,],[11,11,11,]),'DUR':([3,19,22,42,],[7,7,7,7,]),'RPAREN':([33,37,43,44,55,56,57,60,],[-25,-26,-20,53,-23,-24,-22,-21,]),'INT':([11,17,18,24,25,29,34,41,46,47,48,49,52,],[21,26,27,32,33,39,33,33,33,33,33,33,33,]),'MINUS':([33,37,38,39,43,55,56,57,],[-25,-26,47,-25,47,47,47,47,]),'START':([0,],[2,]),'ENDREPEAT':([19,28,51,],[-2,-3,59,]),'AMP':([3,19,22,42,],[15,15,15,15,]),'ID':([10,25,29,34,41,46,47,48,49,52,],[20,37,37,37,37,37,37,37,37,37,]),'RBRACKET':([33,35,36,37,38,50,53,54,55,56,57,],[-25,45,-16,-26,-19,58,-18,-17,-23,-24,-22,]),'END':([14,19,28,],[23,-2,-3,]),'NEWLINE':([2,6,8,9,12,13,26,27,30,31,32,33,37,38,39,40,45,53,55,56,57,58,59,],[3,-5,-6,19,-4,-7,-10,-9,42,-11,-8,-25,-26,-19,-15,-14,-12,-18,-23,-24,-22,-13,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([3,19,42,],[14,28,51,]),'command':([3,19,42,],[12,12,12,]),'loop':([3,19,42,],[13,13,13,]),'nota':([25,29,34,41,46,47,48,49,52,],[38,38,43,38,38,55,56,57,43,]),'acc':([25,29,41,46,],[36,40,36,36,]),'statement':([3,19,42,],[9,9,9,]),'seqnotas':([34,52,],[44,60,]),'program2':([0,],[1,]),'expression':([25,41,46,],[35,50,54,]),'param':([3,19,22,42,],[6,6,31,6,]),'assignation':([3,19,42,],[8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program2","S'",1,None,None,None),
  ('program2 -> START NEWLINE program END','program2',4,'p_program2','apollo_yacc.py',15),
  ('program -> statement NEWLINE','program',2,'p_program_statement_newline','apollo_yacc.py',19),
  ('program -> statement NEWLINE program','program',3,'p_program_statement_program','apollo_yacc.py',23),
  ('statement -> command','statement',1,'p_statement','apollo_yacc.py',27),
  ('statement -> param','statement',1,'p_statement','apollo_yacc.py',28),
  ('statement -> assignation','statement',1,'p_statement','apollo_yacc.py',29),
  ('statement -> loop','statement',1,'p_statement','apollo_yacc.py',30),
  ('param -> AMP TWOPOINTS INT','param',3,'p_param_AMP','apollo_yacc.py',34),
  ('param -> DUR TWOPOINTS INT','param',3,'p_param_DUR','apollo_yacc.py',38),
  ('param -> INSTR TWOPOINTS INT','param',3,'p_param_INSTR','apollo_yacc.py',42),
  ('command -> command COMMA param','command',3,'p_command_param','apollo_yacc.py',46),
  ('command -> PLAY TWOPOINTS LBRACKET expression RBRACKET','command',5,'p_command_PLAY','apollo_yacc.py',50),
  ('assignation -> VAR ID TWOPOINTS LBRACKET expression RBRACKET','assignation',6,'p_assignation_expression','apollo_yacc.py',54),
  ('assignation -> VAR ID TWOPOINTS acc','assignation',4,'p_assignation','apollo_yacc.py',58),
  ('assignation -> VAR ID TWOPOINTS INT','assignation',4,'p_assignation_int_var','apollo_yacc.py',62),
  ('expression -> acc','expression',1,'p_seqacc_acc','apollo_yacc.py',66),
  ('expression -> acc COMMA expression','expression',3,'p_seqacc_accseqacc','apollo_yacc.py',70),
  ('acc -> LPAREN seqnotas RPAREN','acc',3,'p_acc_seqnotas','apollo_yacc.py',74),
  ('acc -> nota','acc',1,'p_acc_nota','apollo_yacc.py',78),
  ('seqnotas -> nota','seqnotas',1,'p_seqnotas_nota','apollo_yacc.py',82),
  ('seqnotas -> nota COMMA seqnotas','seqnotas',3,'p_seqnotas_notaseqnotas','apollo_yacc.py',86),
  ('nota -> nota SUM nota','nota',3,'p_nota_op','apollo_yacc.py',90),
  ('nota -> nota MINUS nota','nota',3,'p_nota_op','apollo_yacc.py',91),
  ('nota -> nota MULTIPLY nota','nota',3,'p_nota_op','apollo_yacc.py',92),
  ('nota -> INT','nota',1,'p_nota','apollo_yacc.py',97),
  ('nota -> ID','nota',1,'p_nota_id','apollo_yacc.py',101),
  ('loop -> REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT','loop',6,'p_loop_repeat','apollo_yacc.py',109),
]
