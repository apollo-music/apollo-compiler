
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMP AMPERSAND COMMA DUR END ENDREPEAT ID INSTR INT LBRACKET LPAREN MINUS MULTIPLY NEWLINE PLAY RBRACKET REPEAT RPAREN START SUM TWOPOINTS VARprogram2 : START NEWLINE program ENDprogram : statement NEWLINEprogram : statement NEWLINE programstatement : command\n\t\t| param\n\t\t| assignation\n\t\t| loopparam : AMP TWOPOINTS INTparam : DUR TWOPOINTS INTparam : INSTR TWOPOINTS INTcommand : command COMMA paramcommand : PLAY TWOPOINTS LBRACKET seqexp RBRACKETassignation : VAR ID TWOPOINTS expexp : LBRACKET seqsound RBRACKET rec_opexp : nota rec_opexp : acc rec_opseqexp : exp COMMA seqexpseqexp : exprec_op : rec_op : SUM exprec_op : MINUS exprec_op : AMPERSAND expseqsound : sound COMMA seqsoundseqsound : soundsound : acc\n\t| notaacc : LPAREN seqnotas RPARENseqnotas : notaseqnotas : nota COMMA seqnotasnota : INTnota : IDloop : REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT'
    
_lr_action_items = {'INT':([7,22,23,24,26,29,34,39,46,47,48,55,58,62,],[18,30,31,32,35,35,35,35,35,35,35,35,35,35,]),'MINUS':([33,35,37,38,57,63,],[-31,-30,48,48,-27,48,]),'END':([11,19,28,],[21,-2,-3,]),'START':([0,],[2,]),'NEWLINE':([2,4,6,8,10,14,25,27,30,31,32,33,35,36,37,38,45,49,56,57,59,60,61,63,64,68,],[3,-4,-6,19,-5,-7,-11,40,-8,-10,-9,-31,-30,-13,-19,-19,-16,-15,-12,-27,-22,-20,-21,-19,-32,-14,]),'VAR':([3,19,40,],[5,5,5,]),'RBRACKET':([33,35,37,38,41,42,45,49,50,51,52,53,57,59,60,61,63,65,67,68,],[-31,-30,-19,-19,-18,56,-16,-15,-24,-25,-26,63,-27,-22,-20,-21,-19,-17,-23,-14,]),'COMMA':([4,25,30,31,32,33,35,37,38,41,44,45,49,50,51,52,56,57,59,60,61,63,68,],[16,-11,-8,-10,-9,-31,-30,-19,-19,55,58,-16,-15,62,-25,-26,-12,-27,-22,-20,-21,-19,-14,]),'INSTR':([3,16,19,40,],[13,13,13,13,]),'ID':([5,26,29,34,39,46,47,48,55,58,62,],[17,33,33,33,33,33,33,33,33,33,33,]),'PLAY':([3,19,40,],[9,9,9,]),'REPEAT':([3,19,40,],[7,7,7,]),'LPAREN':([26,29,39,46,47,48,55,62,],[34,34,34,34,34,34,34,34,]),'AMPERSAND':([33,35,37,38,57,63,],[-31,-30,46,46,-27,46,]),'SUM':([33,35,37,38,57,63,],[-31,-30,47,47,-27,47,]),'AMP':([3,16,19,40,],[12,12,12,12,]),'RPAREN':([33,35,43,44,66,],[-31,-30,57,-28,-29,]),'$end':([1,21,],[0,-1,]),'ENDREPEAT':([19,28,54,],[-2,-3,64,]),'TWOPOINTS':([9,12,13,15,17,18,],[20,22,23,24,26,27,]),'LBRACKET':([20,26,29,46,47,48,55,],[29,39,39,39,39,39,39,]),'DUR':([3,16,19,40,],[15,15,15,15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'command':([3,19,40,],[4,4,4,]),'seqnotas':([34,58,],[43,66,]),'param':([3,16,19,40,],[10,25,10,10,]),'exp':([26,29,46,47,48,55,],[36,41,59,60,61,41,]),'seqexp':([29,55,],[42,65,]),'acc':([26,29,39,46,47,48,55,62,],[37,37,51,37,37,37,37,51,]),'nota':([26,29,34,39,46,47,48,55,58,62,],[38,38,44,52,38,38,38,38,44,52,]),'assignation':([3,19,40,],[6,6,6,]),'program2':([0,],[1,]),'program':([3,19,40,],[11,28,54,]),'rec_op':([37,38,63,],[45,49,68,]),'sound':([39,62,],[50,50,]),'statement':([3,19,40,],[8,8,8,]),'seqsound':([39,62,],[53,67,]),'loop':([3,19,40,],[14,14,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program2","S'",1,None,None,None),
  ('program2 -> START NEWLINE program END','program2',4,'p_program2','apollo_yacc.py',15),
  ('program -> statement NEWLINE','program',2,'p_program_statement_newline','apollo_yacc.py',19),
  ('program -> statement NEWLINE program','program',3,'p_program_statement_program','apollo_yacc.py',23),
  ('statement -> command','statement',1,'p_statement','apollo_yacc.py',27),
  ('statement -> param','statement',1,'p_statement','apollo_yacc.py',28),
  ('statement -> assignation','statement',1,'p_statement','apollo_yacc.py',29),
  ('statement -> loop','statement',1,'p_statement','apollo_yacc.py',30),
  ('param -> AMP TWOPOINTS INT','param',3,'p_param_AMP','apollo_yacc.py',34),
  ('param -> DUR TWOPOINTS INT','param',3,'p_param_DUR','apollo_yacc.py',38),
  ('param -> INSTR TWOPOINTS INT','param',3,'p_param_INSTR','apollo_yacc.py',42),
  ('command -> command COMMA param','command',3,'p_command_param','apollo_yacc.py',46),
  ('command -> PLAY TWOPOINTS LBRACKET seqexp RBRACKET','command',5,'p_command_PLAY','apollo_yacc.py',50),
  ('assignation -> VAR ID TWOPOINTS exp','assignation',4,'p_assignation_expression','apollo_yacc.py',54),
  ('exp -> LBRACKET seqsound RBRACKET rec_op','exp',4,'p_expression_seq','apollo_yacc.py',58),
  ('exp -> nota rec_op','exp',2,'p_expression_nota','apollo_yacc.py',62),
  ('exp -> acc rec_op','exp',2,'p_expression_acc','apollo_yacc.py',66),
  ('seqexp -> exp COMMA seqexp','seqexp',3,'p_seqexp_comma','apollo_yacc.py',70),
  ('seqexp -> exp','seqexp',1,'p_seqexp','apollo_yacc.py',74),
  ('rec_op -> <empty>','rec_op',0,'p_recursive_op_empty','apollo_yacc.py',78),
  ('rec_op -> SUM exp','rec_op',2,'p_recursive_op_sum','apollo_yacc.py',82),
  ('rec_op -> MINUS exp','rec_op',2,'p_recursive_op_minus','apollo_yacc.py',86),
  ('rec_op -> AMPERSAND exp','rec_op',2,'p_recursive_op_ampersand','apollo_yacc.py',90),
  ('seqsound -> sound COMMA seqsound','seqsound',3,'p_seqsound_comma','apollo_yacc.py',94),
  ('seqsound -> sound','seqsound',1,'p_seqsound','apollo_yacc.py',98),
  ('sound -> acc','sound',1,'p_sound','apollo_yacc.py',102),
  ('sound -> nota','sound',1,'p_sound','apollo_yacc.py',103),
  ('acc -> LPAREN seqnotas RPAREN','acc',3,'p_acc_seqnotas','apollo_yacc.py',107),
  ('seqnotas -> nota','seqnotas',1,'p_seqnotas_nota','apollo_yacc.py',111),
  ('seqnotas -> nota COMMA seqnotas','seqnotas',3,'p_seqnotas_notaseqnotas','apollo_yacc.py',115),
  ('nota -> INT','nota',1,'p_nota','apollo_yacc.py',119),
  ('nota -> ID','nota',1,'p_nota_id','apollo_yacc.py',123),
  ('loop -> REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT','loop',6,'p_loop_repeat','apollo_yacc.py',131),
]
