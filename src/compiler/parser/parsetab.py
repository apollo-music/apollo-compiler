
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMP COMMA DUR END ENDREPEAT ID INSTR INT LBRACKET LPAREN MINUS MULTIPLY NEWLINE PLAY RBRACKET REPEAT RPAREN START SUM TWOPOINTS VARprogram2 : START NEWLINE program ENDprogram : statement NEWLINEprogram : statement NEWLINE programstatement : command\n\t\t| param\n\t\t| assignation\n\t\t| loopparam : AMP TWOPOINTS INTparam : DUR TWOPOINTS INTparam : INSTR TWOPOINTS INTcommand : command COMMA paramcommand : PLAY TWOPOINTS LBRACKET seqsound RBRACKETassignation : VAR ID TWOPOINTS expexp : LBRACKET seqsound RBRACKET rec_opexp : nota rec_opexp : acc rec_oprec_op : rec_op : SUM exprec_op : MINUS expseqsound : sound COMMA seqsoundseqsound : soundsound : acc\n\t| notaacc : LPAREN seqnotas RPARENseqnotas : notaseqnotas : nota COMMA seqnotasnota : INTnota : IDloop : REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT'
    
_lr_action_items = {'AMP':([3,16,19,44,],[8,8,8,8,]),'ID':([11,26,29,37,40,48,50,51,56,],[20,33,33,33,33,33,33,33,33,]),'LBRACKET':([17,29,50,51,],[26,40,40,40,]),'START':([0,],[2,]),'TWOPOINTS':([6,8,12,15,20,22,],[17,18,21,24,29,31,]),'RPAREN':([33,35,46,47,62,],[-28,-27,55,-25,-26,]),'RBRACKET':([33,34,35,36,38,39,49,55,57,],[-28,-22,-27,45,-21,-23,58,-24,-20,]),'INT':([13,18,21,24,26,29,37,40,48,50,51,56,],[22,27,30,32,35,35,35,35,35,35,35,35,]),'COMMA':([9,27,28,30,32,33,34,35,38,39,45,47,55,],[19,-8,-11,-10,-9,-28,-22,-27,48,-23,-12,56,-24,]),'MINUS':([33,35,41,43,55,58,],[-28,-27,50,50,-24,50,]),'LPAREN':([26,29,40,48,50,51,],[37,37,37,37,37,37,]),'VAR':([3,16,44,],[11,11,11,]),'INSTR':([3,16,19,44,],[12,12,12,12,]),'$end':([1,23,],[0,-1,]),'REPEAT':([3,16,44,],[13,13,13,]),'SUM':([33,35,41,43,55,58,],[-28,-27,51,51,-24,51,]),'NEWLINE':([2,4,5,7,9,10,27,28,30,31,32,33,35,41,42,43,45,52,53,55,58,59,60,61,63,],[3,16,-6,-5,-4,-7,-8,-11,-10,44,-9,-28,-27,-17,-13,-17,-12,-16,-15,-24,-17,-19,-18,-29,-14,]),'ENDREPEAT':([16,25,54,],[-2,-3,61,]),'PLAY':([3,16,44,],[6,6,6,]),'DUR':([3,16,19,44,],[15,15,15,15,]),'END':([14,16,25,],[23,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rec_op':([41,43,58,],[52,53,63,]),'statement':([3,16,44,],[4,4,4,]),'command':([3,16,44,],[9,9,9,]),'assignation':([3,16,44,],[5,5,5,]),'acc':([26,29,40,48,50,51,],[34,41,34,34,41,41,]),'loop':([3,16,44,],[10,10,10,]),'seqsound':([26,40,48,],[36,49,57,]),'sound':([26,40,48,],[38,38,38,]),'program':([3,16,44,],[14,25,54,]),'exp':([29,50,51,],[42,59,60,]),'program2':([0,],[1,]),'seqnotas':([37,56,],[46,62,]),'param':([3,16,19,44,],[7,7,28,7,]),'nota':([26,29,37,40,48,50,51,56,],[39,43,47,39,39,43,43,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program2","S'",1,None,None,None),
  ('program2 -> START NEWLINE program END','program2',4,'p_program2','apollo_yacc.py',15),
  ('program -> statement NEWLINE','program',2,'p_program_statement_newline','apollo_yacc.py',19),
  ('program -> statement NEWLINE program','program',3,'p_program_statement_program','apollo_yacc.py',23),
  ('statement -> command','statement',1,'p_statement','apollo_yacc.py',27),
  ('statement -> param','statement',1,'p_statement','apollo_yacc.py',28),
  ('statement -> assignation','statement',1,'p_statement','apollo_yacc.py',29),
  ('statement -> loop','statement',1,'p_statement','apollo_yacc.py',30),
  ('param -> AMP TWOPOINTS INT','param',3,'p_param_AMP','apollo_yacc.py',34),
  ('param -> DUR TWOPOINTS INT','param',3,'p_param_DUR','apollo_yacc.py',38),
  ('param -> INSTR TWOPOINTS INT','param',3,'p_param_INSTR','apollo_yacc.py',42),
  ('command -> command COMMA param','command',3,'p_command_param','apollo_yacc.py',46),
  ('command -> PLAY TWOPOINTS LBRACKET seqsound RBRACKET','command',5,'p_command_PLAY','apollo_yacc.py',50),
  ('assignation -> VAR ID TWOPOINTS exp','assignation',4,'p_assignation_expression','apollo_yacc.py',54),
  ('exp -> LBRACKET seqsound RBRACKET rec_op','exp',4,'p_expression_seq','apollo_yacc.py',58),
  ('exp -> nota rec_op','exp',2,'p_expression_nota','apollo_yacc.py',62),
  ('exp -> acc rec_op','exp',2,'p_expression_acc','apollo_yacc.py',66),
  ('rec_op -> <empty>','rec_op',0,'p_recursive_op_empty','apollo_yacc.py',70),
  ('rec_op -> SUM exp','rec_op',2,'p_recursive_op_sum','apollo_yacc.py',74),
  ('rec_op -> MINUS exp','rec_op',2,'p_recursive_op_minus','apollo_yacc.py',78),
  ('seqsound -> sound COMMA seqsound','seqsound',3,'p_seqsound_comma','apollo_yacc.py',82),
  ('seqsound -> sound','seqsound',1,'p_seqsound','apollo_yacc.py',86),
  ('sound -> acc','sound',1,'p_sound','apollo_yacc.py',90),
  ('sound -> nota','sound',1,'p_sound','apollo_yacc.py',91),
  ('acc -> LPAREN seqnotas RPAREN','acc',3,'p_acc_seqnotas','apollo_yacc.py',95),
  ('seqnotas -> nota','seqnotas',1,'p_seqnotas_nota','apollo_yacc.py',99),
  ('seqnotas -> nota COMMA seqnotas','seqnotas',3,'p_seqnotas_notaseqnotas','apollo_yacc.py',103),
  ('nota -> INT','nota',1,'p_nota','apollo_yacc.py',107),
  ('nota -> ID','nota',1,'p_nota_id','apollo_yacc.py',111),
  ('loop -> REPEAT INT TWOPOINTS NEWLINE program ENDREPEAT','loop',6,'p_loop_repeat','apollo_yacc.py',119),
]
